/*
Hi,
this is my first multi line comment
*/

from io import BytesIO
from pdfdocument.document import PDFDocument
import requests
import json
import datetime
import os

dir = os.getcwd()


/*
Since, we are using api provided by CIRCL.lu, querying the REST API via python lib requests.
Then, we load the result to json so that we could use it as python dictionary,
*/

ask = input("Enter CVE to search for: ")
print ("[*] Generating Report...")
query = requests.get("http://cve.circl.lu/api/cve/{}".format(ask))
a = query.text
j = json.loads(a)

#this func is to retrieve values from nested dictionary provided by CIRCL.lu
def capec(pdf):
        pdf.h2("CVE Details\n")
        msg = ''
        leng = (len(j["capec"]))
        for i in range(leng):
                msg = msg + "ID         {}\nName        {}\nPrerequisites       {}\nSolution\n{}\nSummary\n{}\n\n".format(j['capec'][i]['id'],j['capec'][i]['name'],j['capec'][i]['prerequisites'],j['capec'][i]['solutions'],j['capec'][i]['summary'])

        pdf.p(msg)
	
# Again, this func is to retrieve values from nested dictionary provided by CIRCL.lu
def vuln(pdf):
        pdf.h2("Vulnerable Products")
        msg = ''
        vuleng = (len(j["vulnerable_product"]))
        for i in range(vuleng):
                msg = msg + (j["vulnerable_product"][i]) + "\n"
        pdf.p(msg + "\n")


intro =  ("Published Date\t{}\nAssigner\t{}\nSummary:\n{}\n\n".format(j["Published"],j["assigner"],j["summary"]))
#vuln()
#capec()
time = datetime.datetime.now()


#following line is for generating simple PDF documnet wil all detailed retrieved by above code,
f = BytesIO()
pdf = PDFDocument("CVE Report-{}.pdf".format(time))
pdf.init_report()
pdf.h1("Report for {}".format(ask))
pdf.p(intro)
vuln(pdf)
capec(pdf)

pdf.generate()
print ("[*] The report has been generated successfully, please find the pdf document in path '{}'.".format(dir))
